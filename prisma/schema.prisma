generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SQL_URI")
}

model User {
  id            Int                       @id @default(autoincrement())
  username      String                    @unique @db.VarChar(255)
  password      String                    @db.VarChar(255)
  conversations ConversationParticipant[]
  messages      Message[]
  profile       Profile?

  @@map("users")
}

model Profile {
  id             Int          @id @default(autoincrement())
  firstName      String?       @db.VarChar(100)
  surName        String?       @db.VarChar(100)
  profileSummary String?       @db.VarChar(1000)
  userId         Int          

  user           User         @relation(fields: [userId], references: [id])

  @@unique(userId)
  @@map("profile")
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String?       @db.VarChar(1000)
  imageUrl       String? 
  createdAt      DateTime     @default(now())
  senderId       Int
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User         @relation(fields: [senderId], references: [id])

  @@map("message")
}

model Conversation {
  id           Int                       @id @default(autoincrement())
  createdAt    DateTime                  @default(now())
  name         String?   @db.VarChar(255)
  isGroup      Boolean   @default(false)
  participants ConversationParticipant[]
  messages     Message[]

  @@map("conversation")
}

model ConversationParticipant {
  id             Int          @id @default(autoincrement())
  userId         Int
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@unique([userId, conversationId])
  @@map("conversation_participant")
}
